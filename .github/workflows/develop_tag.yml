name: Develop Tag

on:
  pull_request:
    branches: [ develop ]
    types:
      - opened
      - synchronize
      - closed
  workflow_dispatch:
jobs:
  # criar a tag na develop se o a pr for concluida
  TagEuDev: 
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && 
            github.event.action == 'closed' && 
            github.event.pull_request.merged == true && 
            github.event.pull_request.base.ref == 'develop' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Git Identity
        run: |
          git config user.email "eduardo.gobetti@gmail.com"
          git config user.name "Eduardo Gobetti"

      # - name: Get Latest Tag
      #   id: latest_tag
      #   run: |
      #     git fetch --tags
      #     latest_tag=$(git describe --tags --abbrev=0)
      #     echo "tag ==> $latest_tag"
      #     echo "::set-output name=TAG_VERSION::$latest_tag"

      # - name: Echo TAG_VERSION
      #   run: |
      #     echo "Using Tag in Next Job: ${{ steps.latest_tag.outputs.TAG_VERSION }}"
      - name: Generate Git Tag
            id: generate_tag
            run: |
              VERSION_PREFIX="v"
              VERSION_MAJOR_MINOR="1.0"
              VERSION_PATCH=$(git tag --list "${VERSION_PREFIX}${VERSION_MAJOR_MINOR}.*" --sort=-version:refname | head -n 1 | grep -oE '[0-9]+$')
              if [ -z "$VERSION_PATCH" ]; then
                VERSION_PATCH=0
              else
                VERSION_PATCH=$((VERSION_PATCH + 1))
              fi
              NEW_TAG="${VERSION_PREFIX}${VERSION_MAJOR_MINOR}.${VERSION_PATCH}"
              echo "Generated new tag: $NEW_TAG"
              echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV 